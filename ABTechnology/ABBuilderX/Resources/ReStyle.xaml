<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:Controls"
					xmlns:view="clr-namespace:Views"
					xmlns:c="clr-namespace:Albert.Win32.Controls;assembly=Albert.Win32">


	<Style TargetType="view:MainShell">

		<Setter Property="WindowState" Value="Maximized" />
		<Setter Property="Background" Value="{StaticResource ABBackground}" /> 
		
	</Style>
	
	<Style TargetType="local:XTextEditor">
		<Setter Property="Background" Value="{StaticResource ABBackground}" />
		<Setter Property="Foreground" Value="{StaticResource ABForeground}" />
		<Setter Property="FontSize" Value="14pt" />
		<Setter Property="WordWrap" Value="True" />
		<Setter Property="FontFamily" Value="Segoe Print" />

		<Setter Property="LineNumbersForeground" Value="#ccc" />


		<Setter Property="ContextMenu">


			<Setter.Value>
				<ContextMenu BorderBrush="Transparent" BorderThickness="0" Background="{StaticResource ABBackground}" >
					<MenuItem Command="Cut" />
					<MenuItem Command="Copy" />
					<MenuItem Command="Paste" />
				</ContextMenu>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="local:XWriterBox">
		<Setter Property="Background" Value="{StaticResource ABBackground}" />
		<Setter Property="Foreground" Value="{StaticResource ABForeground}" />
		<Setter Property="FontSize" Value="14pt" />
		<Setter Property="AcceptsTab" Value="True" />
		<Setter Property="AcceptsReturn" Value="True" />
		<Setter Property="SpellCheck.IsEnabled"  Value="True" />

		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="FontFamily" Value="Segoe Print" />
		<Setter Property="ContextMenu">

	
			<Setter.Value>
				<ContextMenu BorderBrush="Transparent" BorderThickness="0" Background="{StaticResource ABBackground}" >
					<MenuItem Command="Cut" />
					<MenuItem Command="Copy" />
					<MenuItem Command="Paste" />
				</ContextMenu>
			</Setter.Value>
		</Setter>
	</Style>
	
		
	
	
	<!--#region  ScrollViewer -->
	<Style x:Key="LeftScrollViewer"
       TargetType="{x:Type ScrollViewer}">
		<Setter Property="OverridesDefaultStyle"
          Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border Grid.Column="1"
                  BorderThickness="0,1,1,1" BorderBrush="{StaticResource Primary}">
						
							<ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
						</Border>
						<ScrollBar x:Name="PART_VerticalScrollBar"
                     Value="{TemplateBinding VerticalOffset}"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
						<ScrollBar x:Name="PART_HorizontalScrollBar"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Grid.Column="1"
                     Value="{TemplateBinding HorizontalOffset}"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->
	<!--#region  Textbox's -->

	<Style TargetType="RichTextBox">
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="Background" Value="White" />
		<Setter Property="FontSize" Value="13pt" />
		<Setter Property="SpellCheck.IsEnabled" Value="True" />

		<Style.Resources>
			<Style TargetType="List">
				<Setter Property="Background" Value="White" />
				<Setter Property="Foreground" Value="Black" />
			</Style>
			<Style TargetType="ListItem">
				<Setter Property="Background" Value="White" />
				<Setter Property="Foreground" Value="Black" />
			</Style>
		</Style.Resources>

	</Style>
	
	

	<Style TargetType="TextBox" x:Key="txtBase">


		<Setter Property="Background" Value="{StaticResource ABBackground}" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontSize" Value="13pt" />
		<Setter Property="FontFamily" Value="Courier New" />
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="AcceptsReturn" Value="True" />
		<Setter Property="AcceptsTab" Value="True" />
		<Setter Property="SpellCheck.IsEnabled" Value="True" />
	</Style>

	<Style TargetType="TextBox" x:Key="txtField" BasedOn="{StaticResource txtBase}">

		<Setter Property="Height" Value="30" />
		<Setter Property="FontSize" Value="13pt" />
		<Setter Property="AcceptsTab" Value="False" />
		<Setter Property="AcceptsReturn" Value="False" />
		<Setter Property="FontFamily" Value="Courier New" />
	</Style>
	<!--#endregion-->

	<!--#region Button Base's -->

	<Style TargetType="c:PushButton" x:Key="pushBase2">
		<Setter Property="Background" Value="{StaticResource Accent2}" />
		<Setter Property="BackgroundMouseOver" Value="{StaticResource abRadialChrome4}" />
		<Setter Property="BackgroundPressed" Value="{StaticResource abRadialChrome}" />
		<Setter Property="BorderBrush" Value="{StaticResource ABForeground}" />
		<Setter Property="Foreground" Value="{StaticResource ABForeground}" />
		<Setter Property="ForegroundPressed" Value="{StaticResource abAccent4}" />
		<Setter Property="FontSize" Value="14pt" />
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="Margin" Value="5" />
	</Style>

	<Style TargetType="c:PushButton" x:Key="pushBase">
		<Setter Property="Background" Value="{StaticResource abRadialChrome}" />
		<Setter Property="BackgroundMouseOver" Value="{StaticResource abRadialChrome5}" />
		<Setter Property="BackgroundPressed" Value="{StaticResource abRadialChrome2}" />
		<Setter Property="BorderBrush" Value="{StaticResource ABForeground}" />
		<Setter Property="Foreground" Value="{StaticResource ABForeground}" />
		<Setter Property="ForegroundPressed" Value="{StaticResource abAccent4}" />
		<Setter Property="FontSize" Value="14pt" />
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="Margin" Value="5" />
	</Style>

	<Style TargetType="c:OptionButton" x:Key="optBase">
		<Setter Property="Background" Value="{StaticResource abRadialChrome}" />
		<Setter Property="BackgroundMouseOver" Value="{StaticResource abRadialChrome5}" />
		<Setter Property="BackgroundChecked" Value="{StaticResource abRadialChrome2}" />
		<Setter Property="BorderBrush" Value="{StaticResource ABForeground}" />
		<Setter Property="Foreground" Value="{StaticResource ABForeground}" />
		<Setter Property="ForegroundChecked" Value="{StaticResource abAccent4}" />
		<Setter Property="FontSize" Value="18pt" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="Stretch" Value="Uniform" />
		<Setter Property="FontFamily" Value="Segoe UI Black" />
	</Style>

	<Style TargetType="c:CheckButton" x:Key="chkBase">
		<Setter Property="Background" Value="{StaticResource abRadialChrome}" />
		<Setter Property="BackgroundMouseOver" Value="{StaticResource abRadialChrome5}" />
		<Setter Property="BackgroundChecked" Value="{StaticResource abRadialChrome2}" />
		<Setter Property="BorderBrush" Value="{StaticResource ABForeground}" />
		<Setter Property="Foreground" Value="{StaticResource ABForeground}" />
		<Setter Property="ForegroundChecked" Value="{StaticResource abAccent4}" />
		<Setter Property="FontSize" Value="18pt" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="Stretch" Value="Uniform" />
		<Setter Property="FontFamily" Value="Segoe UI Black" />
	</Style>
	<!--#endregion-->
	
	
	
	<!--#region  Menu-->
	<Style x:Key="{x:Type Menu}"
       TargetType="{x:Type Menu}">

		<Style.Resources>
			<Style TargetType="Separator">
				<Setter Property="HorizontalAlignment" Value="Stretch" />
			</Style>
		</Style.Resources>
		<Setter Property="OverridesDefaultStyle"
          Value="True" />
		<Setter Property="Background" Value="{StaticResource ABBackground}" />
		<Setter Property="Foreground" Value="{StaticResource ABForeground}" />
		<Setter Property="SnapsToDevicePixels"
          Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border BorderThickness="0.2" BorderBrush="DarkGray" Background="{StaticResource Secondary}">


						<StackPanel ClipToBounds="True"
                      Orientation="Horizontal"
                      IsItemsHost="True" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

 
	

	<!-- TopLevelHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
		<Border Background="{StaticResource ABBackground}" x:Name="Border">
			<Grid>
				<ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
				<Popup x:Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
					<Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="0"
                Background="{StaticResource ABBackground}">

						<ScrollViewer  Style="{DynamicResource MenuScrollViewer}" >
						<StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
             Value="true">
				<Setter TargetName="Popup"
              Property="PopupAnimation"
              Value="None" />
			</Trigger>
			<Trigger Property="IsHighlighted"
             Value="true">
				<Setter TargetName="Border"
              Property="BorderBrush"
              Value="Transparent" />
				<Setter Property="Background"
              TargetName="Border" Value="{StaticResource Secondary}">

				</Setter>
			</Trigger>
			<Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
				<Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="0,0,4,4" />
				<Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,0,0,3" />
			</Trigger>
			<Trigger Property="IsEnabled"
             Value="False">
				<Setter Property="Foreground" Value="DarkGray" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- TopLevelItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" Background="{StaticResource ABBackground}" BorderThickness="1.5" BorderBrush="DarkGray">
			<Grid>
				<ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted"
             Value="true">
				<Setter Property="Background"
              TargetName="Border" Value="{StaticResource Primary}">

				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled"
             Value="False">
				<Setter Property="Foreground" Value="DarkGray" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SubmenuItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
		<Border x:Name="Border"
          BorderThickness="0" Background="{StaticResource ABBackground}" BorderBrush="DarkGray">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="13" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
				<Border x:Name="Check"
              Width="13"
              Height="13"
              Visibility="Collapsed"
              Margin="6,0,6,0"
              BorderThickness="0">


					<Path x:Name="CheckMark"
              Width="7"
              Height="7"
              Visibility="Hidden"
              SnapsToDevicePixels="False"
              StrokeThickness="2"
			  Stroke="White"
              Data="M 0 0 L 7 7 M 0 7 L 7 0"  />


				</Border>
				<ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
				<TextBlock x:Name="InputGestureText"
                 Grid.Column="2" FontSize="8pt"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,0,2"
                 DockPanel.Dock="Right" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />
			<Trigger Property="Icon"
             Value="{x:Null}">
				<Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
			</Trigger>
			<Trigger Property="IsChecked"
             Value="true">
				<Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
			</Trigger>
			<Trigger Property="IsCheckable"
             Value="true">
				<Setter TargetName="Check"
              Property="Visibility"
              Value="Visible" />
				<Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
			</Trigger>
			<Trigger Property="IsHighlighted"
             Value="true">
				<Setter Property="Background"
              TargetName="Border" Value="{StaticResource  Primary}">

				</Setter>
				<Setter Property="BorderBrush"
              TargetName="Border">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
							<GradientStop Color="{DynamicResource BorderMediumColor}"
                          Offset="0" />
							<GradientStop Color="Transparent"
                          Offset="1" />
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled"
             Value="false">
			

			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
		<Border x:Name="Border"
          BorderThickness="1" Background="{StaticResource ABBackground}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="13" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
				<ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
				<TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,2,2"
                 DockPanel.Dock="Right" />
				<Path Grid.Column="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 0 7 L 4 3.5 Z">
					<Path.Fill>
						<SolidColorBrush Color="{DynamicResource GlyphColor}" />
					</Path.Fill>
				</Path>
				<Popup x:Name="Popup"
             Placement="Right"
             HorizontalOffset="-4"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
					<Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                Background="{DynamicResource MenuPopupBrush}"
                BorderThickness="1">
						<Border.BorderBrush>
							<SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
						</Border.BorderBrush>
						<ScrollViewer CanContentScroll="True"
                        Style="{DynamicResource MenuScrollViewer}">
							<StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
             Value="{x:Null}">
				<Setter TargetName="Icon"
              Property="Visibility"
              Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
             Value="true">
				<Setter Property="Background"
              TargetName="Border">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
							<GradientStop Color="Transparent"
                          Offset="0" />
							<GradientStop Color="{DynamicResource ControlMouseOverColor}"
                          Offset="1" />
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="BorderBrush"
              TargetName="Border">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
							<GradientStop Color="{DynamicResource BorderMediumColor}"
                          Offset="0" />
							<GradientStop Color="Transparent"
                          Offset="1" />
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
				<Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="4" />
				<Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,3,0,3" />
			</Trigger>
			<Trigger Property="IsEnabled"
             Value="false">
				<Setter Property="Foreground" Value="White" />

			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- MenuItem Style -->
	<Style x:Key="{x:Type MenuItem}"
       TargetType="{x:Type MenuItem}">
		<Setter Property="OverridesDefaultStyle"
          Value="True" />
		<Style.Triggers>
			<Trigger Property="Role"
             Value="TopLevelHeader">
				<Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
				<Setter Property="Grid.IsSharedSizeScope"
              Value="true" />
			</Trigger>
			<Trigger Property="Role"
             Value="TopLevelItem">
				<Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role"
             Value="SubmenuHeader">
				<Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role"
             Value="SubmenuItem">
				<Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--ScrollViewer for a MenuItem-->
	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

	<Style x:Key="MenuScrollViewer"
       TargetType="{x:Type ScrollViewer}"
       BasedOn="{x:Null}">
		<Setter Property="HorizontalScrollBarVisibility"
          Value="Hidden" />
		<Setter Property="VerticalScrollBarVisibility"
          Value="Auto" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border Grid.Row="1"
                  Grid.Column="0">
							<ScrollContentPresenter Margin="{TemplateBinding Padding}" />
						</Border>
						<RepeatButton Style="{DynamicResource MenuScrollButton}"
                        Grid.Row="0"
                        Grid.Column="0"
                        Command="{x:Static ScrollBar.LineUpCommand}"
                        CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
                            Converter="{StaticResource MenuScrollingVisibilityConverter}"
                            ConverterParameter="0">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ComputedVerticalScrollBarVisibility" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="VerticalOffset" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ExtentHeight" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ViewportHeight" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                  Data="{DynamicResource UpArrow}" />
						</RepeatButton>
						<RepeatButton Style="{DynamicResource MenuScrollButton}"
                        Grid.Row="2"
                        Grid.Column="0"
                        Command="{x:Static ScrollBar.LineDownCommand}"
                        CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
                            Converter="{StaticResource MenuScrollingVisibilityConverter}"
                            ConverterParameter="100">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ComputedVerticalScrollBarVisibility" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="VerticalOffset" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ExtentHeight" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ViewportHeight" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                  Data="{DynamicResource DownArrow}" />
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--endregion -->

</ResourceDictionary>