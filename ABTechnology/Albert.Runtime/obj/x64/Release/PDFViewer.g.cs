#pragma checksum "C:\AMB\Git\ABMedia83Technology\ABTechnology\Albert.Runtime\PDFViewer.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "140959B1A7F76A302F12FDE7021AE6140B0E027EFEFD40747557700A063FB90C"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Albert.Runtime
{
    partial class PDFViewer : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ScrollViewer_ZoomMode(global::Windows.UI.Xaml.Controls.ScrollViewer obj, global::Windows.UI.Xaml.Controls.ZoomMode value)
            {
                obj.ZoomMode = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Background(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class PDFViewer_obj5_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPDFViewer_Bindings
        {
            private global::Windows.UI.Xaml.Media.Imaging.BitmapImage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj5;

            public PDFViewer_obj5_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // PDFViewer.xaml line 18
                        this.obj5 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Image)target);
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj5.Target as global::Windows.UI.Xaml.Controls.Image).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Windows.UI.Xaml.Media.Imaging.BitmapImage) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IPDFViewer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Windows.UI.Xaml.Media.Imaging.BitmapImage)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // PDFViewer.xaml line 18
                    if ((this.obj5.Target as global::Windows.UI.Xaml.Controls.Image) != null)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source((this.obj5.Target as global::Windows.UI.Xaml.Controls.Image), obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class PDFViewer_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPDFViewer_Bindings
        {
            private global::Albert.Runtime.PDFViewer dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.ScrollViewer obj2;
            private global::Windows.UI.Xaml.Controls.ItemsControl obj3;

            private PDFViewer_obj1_BindingsTracking bindingsTracking;

            public PDFViewer_obj1_Bindings()
            {
                this.bindingsTracking = new PDFViewer_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // PDFViewer.xaml line 12
                        this.obj2 = (global::Windows.UI.Xaml.Controls.ScrollViewer)target;
                        break;
                    case 3: // PDFViewer.xaml line 14
                        this.obj3 = (global::Windows.UI.Xaml.Controls.ItemsControl)target;
                        break;
                    default:
                        break;
                }
            }

            // IPDFViewer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Albert.Runtime.PDFViewer)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Albert.Runtime.PDFViewer obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ZoomMode(obj.ZoomMode, phase);
                        this.Update_Background(obj.Background, phase);
                        this.Update_PdfPages(obj.PdfPages, phase);
                    }
                }
            }
            private void Update_ZoomMode(global::Windows.UI.Xaml.Controls.ZoomMode obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PDFViewer.xaml line 12
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ScrollViewer_ZoomMode(this.obj2, obj);
                }
            }
            private void Update_Background(global::Windows.UI.Xaml.Media.Brush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PDFViewer.xaml line 12
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj2, obj, null);
                }
            }
            private void Update_PdfPages(global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.Imaging.BitmapImage> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PdfPages(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // PDFViewer.xaml line 14
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj3, obj, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class PDFViewer_obj1_BindingsTracking
            {
                private global::System.WeakReference<PDFViewer_obj1_Bindings> weakRefToBindingObj; 

                public PDFViewer_obj1_BindingsTracking(PDFViewer_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<PDFViewer_obj1_Bindings>(obj);
                }

                public PDFViewer_obj1_Bindings TryGetBindingObject()
                {
                    PDFViewer_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_PdfPages(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PDFViewer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Albert.Runtime.PDFViewer obj = sender as global::Albert.Runtime.PDFViewer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ZoomMode(obj.ZoomMode, DATA_CHANGED);
                                bindings.Update_Background(obj.Background, DATA_CHANGED);
                                bindings.Update_PdfPages(obj.PdfPages, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ZoomMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ZoomMode(obj.ZoomMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Background":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Background(obj.Background, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PdfPages":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PdfPages(obj.PdfPages, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void DependencyPropertyChanged_Background(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    PDFViewer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Albert.Runtime.PDFViewer obj = sender as global::Albert.Runtime.PDFViewer;
                        if (obj != null)
                        {
                            bindings.Update_Background(obj.Background, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_Background = 0;
                public void UpdateChildListeners_(global::Albert.Runtime.PDFViewer obj)
                {
                    PDFViewer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Control.BackgroundProperty, tokenDPC_Background);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                            tokenDPC_Background = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Control.BackgroundProperty, DependencyPropertyChanged_Background);
                        }
                    }
                }
                public void PropertyChanged_PdfPages(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PDFViewer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.Imaging.BitmapImage> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.Imaging.BitmapImage>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_PdfPages(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    PDFViewer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.Imaging.BitmapImage> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.Imaging.BitmapImage>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.Imaging.BitmapImage> cache_PdfPages = null;
                public void UpdateChildListeners_PdfPages(global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.Imaging.BitmapImage> obj)
                {
                    if (obj != cache_PdfPages)
                    {
                        if (cache_PdfPages != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PdfPages).PropertyChanged -= PropertyChanged_PdfPages;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_PdfPages).CollectionChanged -= CollectionChanged_PdfPages;
                            cache_PdfPages = null;
                        }
                        if (obj != null)
                        {
                            cache_PdfPages = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PdfPages;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_PdfPages;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // PDFViewer.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    PDFViewer_obj1_Bindings bindings = new PDFViewer_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 5: // PDFViewer.xaml line 18
                {                    
                    global::Windows.UI.Xaml.Controls.Image element5 = (global::Windows.UI.Xaml.Controls.Image)target;
                    PDFViewer_obj5_Bindings bindings = new PDFViewer_obj5_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element5.DataContext);
                    element5.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element5, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element5, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

